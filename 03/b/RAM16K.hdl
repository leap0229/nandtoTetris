// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in=true, sel=address[12..13], a=address4KA, b=address4KB, c=address4KC,
     d=address4KD);

    And(a=address4KA, b=load, out=addressLoad4KA);
    And(a=address4KB, b=load, out=addressLoad4KB);
    And(a=address4KC, b=load, out=addressLoad4KC);
    And(a=address4KD, b=load, out=addressLoad4KD);

    RAM4K(in=in, load=addressLoad4KA, address=address[0..11], out=register4KAOut);
    RAM4K(in=in, load=addressLoad4KB, address=address[0..11], out=register4KBOut);
    RAM4K(in=in, load=addressLoad4KC, address=address[0..11], out=register4KCOut);
    RAM4K(in=in, load=addressLoad4KD, address=address[0..11], out=register4KDOut);

    Mux4Way16(a=register4KAOut, b=register4KBOut, c=register4KCOut, d=register4KDOut, 
    sel=address[12..13], out=out);
}